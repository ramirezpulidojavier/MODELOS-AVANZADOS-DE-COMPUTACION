Ejercicio 11. Supongamos que una entrada es una palabra de paréntesis. Demostrar que determinar si
están emparejados y anidados correctamente está en L. Lo están (()()) y ((())), pero no lo están )()( ni (()))(.



Este problema se puede resolver con una MT determinista con dos cintas:
	1º cinta (N1): Al principio la entrada. La usaremos para leer de ella.
    2º cinta (N2): Al principio vacía. La usaremos de contador, que empezará a 0.

Cada vez que encontremos '(' en la primera cinta sumamos 1 a la segunda. Cada vez que encontremos ')' restamos 1 a la segunda cinta, pero antes de restar, comprobamos si es 0. Si es 0 y vamos a restar 1, no están emparejados y por tanto, rechazamos.

Si llegamos al final de la 1º cinta y la 2º cinta contiene un numero distinto a 0 rechazamos, si es igual a 0 aceptamos.


MT:
    Mientras el simbolo de N1 != #
        Si el simbolo de N1 == '('
            Sumamos 1 en N2
        Si no
            Si N2 == 0
                Rechazamos
            Si no
                Restamos 1 en N2
    Si N2 == 0
        Aceptamos
    Si no
        Rechazamos


La palabra tendrá como mucho n paréntesis ( y para escribir n en binario se necesitan log2(n) casillas. Por tanto, el algoritmo 
tiene una complejidad de O(log2(n)), luego pertenece a L.



Ejemplo que NO ESTÁ: )()(

	|
N1: )()(
N2: 0

Como tenemos un ) vamos a restar 1 en la segunda, pero antes de restar comprobamos si es 0
Como es 0 rechazamos (línea 20 de la MT)



Ejemplo que ESTÁ: (()())

    |
N1: (()())
N2: 0

Como leemos '(' sumamos 1 en N2

     |
N1: (()())
N2: 1

Como leemos '(' sumamos 1 en N2

      |
N1: (()())
N2: 2

Ahora leemos ')' por lo que vamos a restar 1 en N2 y lo hacemos porque N2 es distinto de 0

	   |
N1: (()())
N2: 1

Ahora leemos '(' sumamos 1 en N2

		|
N1: (()())
N2: 2

Ahora leemos ')' por lo que vamos a restar 1 en N2 y lo hacemos porque N2 es distinto de 0

		 |
N1: (()())
N2: 1

Ahora leemos ')' por lo que vamos a restar 1 en N2 y lo hacemos porque N2 es distinto de 0


	      |	
N1: (()())
N2: 0

Como hemos acabado de leer la entrada de N1 y N2 vale 0 ===> ACEPTAMOS  (línea 24 de la MT)